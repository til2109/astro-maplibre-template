---
import type { MixedBlock } from "@types";
export interface Props {
  id?: string;
  classList?: string;
  block: MixedBlock;
}

const { id, classList, block } = Astro.props;

const pageContent = JSON.stringify(block);
---

<inline-mixed-content data-block={pageContent} data-classlist={classList} data-id={id}></inline-mixed-content>
<div id="inline-mixed-content" class="inline-mixed-content">
  <script>
    
import { parseMixedContent } from "../lib/utils";

    class InlineMixedContent extends HTMLElement {
      constructor() {
        super();
        const block = this.dataset.block ? JSON.parse(this.dataset.block) : {};
        const classList = this.dataset.classlist ? this.dataset.classlist : "";
        const id = this.dataset.id ? this.dataset.id : "";
        const parsedContent = parseMixedContent(block);
        this.innerHTML = parsedContent;
        // apply classList and id to the parent block element
        if (classList.length > 0) {
          this.className += ` ${classList}`;
        }
        if (id.length > 0) {
          this.id = id;
        }
      }
    }    
    window.customElements.define("inline-mixed-content", InlineMixedContent);
  </script>
</div>
